<Page x:Class="VehicleDashConcept.UI.DashboardPages.MediaPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:VehicleDashConcept.UI.DashboardPages"
      xmlns:controls="clr-namespace:VehicleDashConcept.UI.Controls"
      xmlns:converters="clr-namespace:VehicleDashConcept.UI.Converters"
      xmlns:viewModel="clr-namespace:VehicleDashConcept.ViewModel"
      mc:Ignorable="d" 
      d:DesignHeight="200" d:DesignWidth="600"
      Title="MediaPage"
      x:Name="page">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/VehicleDashConcept;component/UI/Icons/CustomSvgs.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/VehicleDashConcept;component/UI/Icons/IconResources.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/VehicleDashConcept;component/UI/Styles/DashConceptResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Page.Resources>
    <Page.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="libraryButton" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="radioButton" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="usbButton" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="wirelessButton" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="volumeControls" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="mediaDetails" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="albumImage" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />

                    <DoubleAnimation Storyboard.TargetName="libraryButton" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.3" BeginTime="0:0:.1" EasingFunction="{StaticResource cubicEase}" />
                    <DoubleAnimation Storyboard.TargetName="radioButton" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.3" BeginTime="0:0:.2" EasingFunction="{StaticResource cubicEase}"/>
                    <DoubleAnimation Storyboard.TargetName="usbButton" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.3" BeginTime="0:0:0.3" EasingFunction="{StaticResource cubicEase}"/>
                    <DoubleAnimation Storyboard.TargetName="wirelessButton" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.3" BeginTime="0:0:0.4" EasingFunction="{StaticResource cubicEase}"/>
                    <DoubleAnimation Storyboard.TargetName="volumeControls" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.7" BeginTime="0:0:0.1"/>
                    <DoubleAnimation Storyboard.TargetName="mediaDetails" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.7" BeginTime="0:0:0.1" />
                    <DoubleAnimation Storyboard.TargetName="albumImage" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.7" BeginTime="0:0:0.1" />

                    <DoubleAnimation Storyboard.TargetName="albumImage" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" From="0.9" To="1" BeginTime="0:0:0.1" Duration="0:0:.7" EasingFunction="{StaticResource cubicEase}"/>
                    <DoubleAnimation Storyboard.TargetName="albumImage" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" From="0.9" To="1" BeginTime="0:0:0.1" Duration="0:0:.7" EasingFunction="{StaticResource cubicEase}" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Page.Triggers>
    <Grid>
        <Grid.Background>
            <ImageBrush 
                Opacity=".25"
                RenderOptions.BitmapScalingMode="HighQuality"
                ImageSource="pack://application:,,,/VehicleDashConcept;component/UI/Textures/polygon_background3.jpg"/>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid HorizontalAlignment="Stretch" Background="#88000000">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="160" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border>
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger 
                                Binding="{Binding WirelessConnectionState, Mode=OneWay}" 
                                Value="{x:Static viewModel:WirelessConnectivity.CONNECTED}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Border.Background>
                    <SolidColorBrush Color="RoyalBlue"/>
                </Border.Background>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource GenericLabelStyle}">
                            <Setter Property="FontWeight" Value="Medium"/>
                        </Style>
                    </StackPanel.Resources>
                    <Path 
                        Margin="4,0"
                        Style="{StaticResource DashIcons}"
                        Data="{StaticResource bluetooth}" />
                    <TextBlock Text="Bluetooth: " />
                    <TextBlock Text="My iPhone" />
                </StackPanel>

            </Border>
            <Border  Grid.Column="1"/>
        </Grid>
        <controls:DashSituationalAwarenessReadout 
            ContainerFill="#00000000" 
            Height="24" 
            Width="280" 
            VerticalAlignment="Top"/>

        <Grid Grid.Row="1">
            <Grid.Background>
                <LinearGradientBrush>
                    <GradientStop Color="#00000000"/>
                    <GradientStop Color="#88000000" Offset=".5"/>
                    <GradientStop Color="#00000000" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel 
                x:Name="mediaDetails"
                MinWidth="200"
                Orientation="Vertical" 
                HorizontalAlignment="Center" 
                VerticalAlignment="Stretch"  
                Grid.Column="2">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource GenericLabelStyle}">
                        <Setter Property="FontWeight" Value="Medium"/>
                    </Style>
                </StackPanel.Resources>
                <TextBlock 
                    Text="{Binding MediaViewModel.MediaPlayerItemsCollectionView.CurrentItem.Name, FallbackValue='Song Title', Mode=OneWay}" 
                    FontSize="16"/>
                <Border Padding="4" Margin="0,0,0,20">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource GenericLabelStyle}">
                                <Setter Property="FontWeight" Value="Medium"/>
                                <Setter Property="FontSize" Value="12"/>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="{Binding MediaViewModel.MediaPlayerItemsCollectionView.CurrentItem.Artist, FallbackValue='Artist', Mode=OneWay}" />
                        <Border Height="1" BorderBrush="White" BorderThickness="1" Width="10" Margin="5,0"/>
                        <TextBlock Text="{Binding MediaViewModel.MediaPlayerItemsCollectionView.CurrentItem.Album, FallbackValue='Album', Mode=OneWay}" />
                    </StackPanel>
                </Border>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource GenericLabelStyle}">
                            <Setter Property="FontWeight" Value="Medium"/>
                            <Setter Property="Foreground" Value="#88ffffff"/>
                            <Setter Property="FontSize" Value="12"/>
                        </Style>
                    </Grid.Resources>
                    <TextBlock 
                        Text="{Binding MediaViewModel.CurrentMediaPlaybackPosition, Mode=OneWay, Converter={StaticResource timeSpanToStringConverter},FallbackValue=0:00}" />
                    <Slider 
                        Grid.Column="1" 
                        Value="{Binding MediaViewModel.CurrentMediaPlaybackPosition.TotalSeconds, Mode=OneWay}" 
                        Minimum="0" 
                        Margin="4,0"
                        Maximum="{Binding MediaViewModel.CurrentMediaLength.TotalSeconds, Mode=OneWay}"
                        Interval="1" />
                    <TextBlock 
                        Grid.Column="2" 
                        Text="{Binding MediaViewModel.CurrentMediaPlaybackDifference, Mode=OneWay, Converter={StaticResource timeSpanToStringConverter},FallbackValue=0:00}" />
                </Grid>
                <Grid Margin="0,16,0,0">
                    <Grid.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DashButtonRadialHighlight}">
                            <Setter Property="Background" Value="#00000000"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Height" Value="32"/>
                            <Setter Property="Width" Value="32"/>
                        </Style>
                    </Grid.Resources>
                    <Button 
                        Command="{Binding MediaViewModel.MediaReverse}" 
                        HorizontalAlignment="Left">
                        <Path 
                            Style="{StaticResource DashIcons}"
                            Data="{StaticResource fast_rewind}" />
                    </Button>
                    <Button Command="{Binding MediaViewModel.MediaPlayPause}">
                        <Path>
                            <Path.Style>
                                <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DashIcons}">
                                    <Setter Property="Data" Value="{StaticResource play_arrow}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MediaViewModel.MediaState}" Value="{x:Static viewModel:MediaPlaybackState.PLAY}">
                                            <Setter Property="Data" Value="{StaticResource pause}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>

                    </Button>
                    <Button 
                        Command="{Binding MediaViewModel.MediaForward}" 
                        HorizontalAlignment="Right">
                        <Path 
                            Style="{StaticResource DashIcons}"
                            Data="{StaticResource fast_forward}" />
                    </Button>

                </Grid>
            </StackPanel>
            <StackPanel 
                Margin="4,4,0,0"
                Orientation="Vertical" 
                HorizontalAlignment="Left" 
                VerticalAlignment="Top">
                <StackPanel.Effect>
                    <DropShadowEffect BlurRadius="10" />
                </StackPanel.Effect>
                <Button 
                    x:Name="libraryButton"
                    Style="{StaticResource secondaryPageButton}">
                    <Path 
                        Style="{StaticResource DashIconsRotated180}"
                        Data="{StaticResource library_music}" />
                </Button>
                <Button 
                    x:Name="radioButton"
                    Style="{StaticResource secondaryPageButton}">
                    <Path 
                        Style="{StaticResource DashIconsRotated180}"
                        Data="{StaticResource radio}" />
                </Button>
                <Button 
                    x:Name="usbButton"
                    Style="{StaticResource secondaryPageButton}">
                    <Path 
                        Style="{StaticResource DashIconsRotated180}"
                        Data="{StaticResource usb}" />
                </Button>
                <Button x:Name="wirelessButton">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource secondaryPageButton}">
                            <Setter Property="Background" Value="#cc000000"/>
                            <Style.Triggers>
                                <DataTrigger 
                                    Binding="{Binding WirelessConnectionState, Mode=OneWay}" 
                                    Value="{x:Static viewModel:WirelessConnectivity.CONNECTED}">
                                    <Setter Property="Background" Value="RoyalBlue"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Path 
                        Style="{StaticResource DashIcons}"
                        Data="{StaticResource bluetooth}" />
                </Button>
            </StackPanel>

            <ContentControl 
                x:Name="volumeControls"
                Content="{StaticResource volumeControlModule}" 
                Grid.Column="1" 
                Margin="24,0,0,0" />

            <Image
                x:Name="albumImage"
                Grid.RowSpan="3"
                Grid.Column="3"
                Margin="10"
                RenderTransformOrigin=".5,.5"
                RenderOptions.BitmapScalingMode="HighQuality"
                Source="{Binding MediaViewModel.MediaPlayerItemsCollectionView.CurrentItem.ImageSource, FallbackValue='pack://application:,,,/VehicleDashConcept;component/UI/Textures/albumFallback.jpg', Mode=OneWay}">
                <Image.Effect>
                    <DropShadowEffect BlurRadius="10" />
                </Image.Effect>
                <Image.RenderTransform>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Image.RenderTransform>
            </Image>
        </Grid>
    </Grid>
</Page>